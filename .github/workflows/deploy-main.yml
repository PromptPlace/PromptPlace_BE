name: deploy-main

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check prisma has changes
        uses: dorny/paths-filter@v3
        id: paths-filter
        with:
          filters: |
            prisma: ["prisma/**"]

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "$EC2_SSH_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          cat >>~/.ssh/config <<END
          Host promptplace
            HostName $EC2_HOST
            User $EC2_USER
            IdentityFile ~/.ssh/id_rsa
            StrictHostKeyChecking no
          END
        env:
          EC2_USER: ubuntu
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}

      - name: Copy Workspace
        run: |
          ssh promptplace 'sudo mkdir -p /opt/app'
          ssh promptplace 'sudo chown ubuntu:ubuntu /opt/app'
          scp -r ./[!.]* promptplace:/opt/app

      - name: Write .env on EC2
        run: |
          ssh promptplace '
            cat > /opt/app/.env <<EOF
          ${{ secrets.ENV_CONTENT }}
          EOF
          '

      - name: Install dependencies
        run: |
          ssh promptplace 'cd /opt/app && pnpm install'

      - name: Generate Prisma client
        run: |
          ssh promptplace 'cd /opt/app && pnpm exec prisma generate'

      - name: Apply Prisma migrations
        if: steps.paths-filter.outputs.prisma == 'true'
        run: |
          ssh promptplace 'cd /opt/app && pnpm exec prisma migrate deploy'

      - name: Copy systemd service file
        run: |
          ssh promptplace '
            echo "[Unit]
            Description=PromptPlace Backend
            After=network.target

            [Service]
            User=ubuntu
            WorkingDirectory=/opt/app
            EnvironmentFile=/opt/app/.env
            ExecStart=/usr/bin/pnpm start
            Restart=always

            [Install]
            WantedBy=multi-user.target" | sudo tee /etc/systemd/system/app.service
          '

      - name: Enable systemd service
        run: |
          ssh promptplace 'sudo systemctl daemon-reload'
          ssh promptplace 'sudo systemctl enable app'

      - name: Restart systemd service
        run: |
          ssh promptplace 'sudo systemctl restart app'